class Ghost{constructor(a,b,c,d,e,f,g,h,i,j){this.x=a,this.y=b,this.width=c,this.height=d,this.speed=e,this.direction=DIRECTION_RIGHT,this.imageX=f,this.imageY=g,this.imageHeight=i,this.imageWidth=h,this.range=j,this.randomTargetIndex=parseInt(4*Math.random()),this.target=randomTargetsForGhosts[this.randomTargetIndex],setInterval(()=>{this.changeRandomDirection()},1e4)}isInRange(){let a=Math.abs(pacman.getMapX()-this.getMapX()),b=Math.abs(pacman.getMapY()-this.getMapY());return!!(Math.sqrt(a*a+b*b)<=this.range)}changeRandomDirection(){this.randomTargetIndex+=1,this.randomTargetIndex%=4}moveProcess(){if(this.target=this.isInRange()?pacman:randomTargetsForGhosts[this.randomTargetIndex],this.changeDirectionIfPossible(),this.moveForwards(),this.checkCollisions())return void this.moveBackwards()}moveBackwards(){switch(this.direction){case 4:this.x-=this.speed;break;case 3:this.y+=this.speed;break;case 2:this.x+=this.speed;break;case 1:this.y-=this.speed;}}moveForwards(){switch(this.direction){case 4:this.x+=this.speed;break;case 3:this.y-=this.speed;break;case 2:this.x-=this.speed;break;case 1:this.y+=this.speed;}}checkCollisions(){let a=!1;return(1==map[parseInt(this.y/oneBlockSize)][parseInt(this.x/oneBlockSize)]||1==map[parseInt(this.y/oneBlockSize+.9999)][parseInt(this.x/oneBlockSize)]||1==map[parseInt(this.y/oneBlockSize)][parseInt(this.x/oneBlockSize+.9999)]||1==map[parseInt(this.y/oneBlockSize+.9999)][parseInt(this.x/oneBlockSize+.9999)])&&(a=!0),a}changeDirectionIfPossible(){let a=this.direction;return this.direction=this.calculateNewDirection(map,parseInt(this.target.x/oneBlockSize),parseInt(this.target.y/oneBlockSize)),"undefined"==typeof this.direction?void(this.direction=a):void(this.getMapY()!=this.getMapYRightSide()&&(this.direction==DIRECTION_LEFT||this.direction==DIRECTION_RIGHT)&&(this.direction=DIRECTION_UP),this.getMapX()!=this.getMapXRightSide()&&this.direction==DIRECTION_UP&&(this.direction=DIRECTION_LEFT),this.moveForwards(),this.checkCollisions()?(this.moveBackwards(),this.direction=a):this.moveBackwards(),console.log(this.direction))}calculateNewDirection(a,b,c){let d=[];for(let e=0;e<a.length;e++)d[e]=a[e].slice();for(let e=[{x:this.getMapX(),y:this.getMapY(),rightX:this.getMapXRightSide(),rightY:this.getMapYRightSide(),moves:[]}];0<e.length;){let a=e.shift();if(a.x==b&&a.y==c)return a.moves[0];else{d[a.y][a.x]=1;let b=this.addNeighbors(a,d);for(let a=0;a<b.length;a++)e.push(b[a])}}return 1}addNeighbors(a,b){let c=[],d=b.length,e=b[0].length;if(0<=a.x-1&&a.x-1<d&&1!=b[a.y][a.x-1]){let b=a.moves.slice();b.push(DIRECTION_LEFT),c.push({x:a.x-1,y:a.y,moves:b})}if(0<=a.x+1&&a.x+1<d&&1!=b[a.y][a.x+1]){let b=a.moves.slice();b.push(DIRECTION_RIGHT),c.push({x:a.x+1,y:a.y,moves:b})}if(0<=a.y-1&&a.y-1<e&&1!=b[a.y-1][a.x]){let b=a.moves.slice();b.push(DIRECTION_UP),c.push({x:a.x,y:a.y-1,moves:b})}if(0<=a.y+1&&a.y+1<e&&1!=b[a.y+1][a.x]){let b=a.moves.slice();b.push(DIRECTION_BOTTOM),c.push({x:a.x,y:a.y+1,moves:b})}return c}getMapX(){let a=parseInt(this.x/oneBlockSize);return a}getMapY(){let a=parseInt(this.y/oneBlockSize);return a}getMapXRightSide(){let a=parseInt((.99*this.x+oneBlockSize)/oneBlockSize);return a}getMapYRightSide(){let a=parseInt((.99*this.y+oneBlockSize)/oneBlockSize);return a}changeAnimation(){this.currentFrame=this.currentFrame==this.frameCount?1:this.currentFrame+1}draw(){canvasContext.save(),canvasContext.drawImage(ghostFrames,this.imageX,this.imageY,this.imageWidth,this.imageHeight,this.x,this.y,this.width,this.height)}}let updateGhosts=()=>{for(let a=0;a<ghosts.length;a++)ghosts[a].moveProcess()},drawGhosts=()=>{for(let a=0;a<ghosts.length;a++)ghosts[a].draw()};